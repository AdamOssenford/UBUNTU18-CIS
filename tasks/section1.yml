---
- name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/cramfs.conf
            regexp: "^(#)?install cramfs(\\s|$)"
            line: install cramfs /bin/true
            create: yes

      - name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Disable cramfs"
        modprobe:
            name: cramfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/freevxfs.conf
            regexp: "^(#)?install freevxfs(\\s|$)"
            line: install freevxfs /bin/true
            create: yes

      - name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled | Disable freevxfs"
        modprobe:
            name: freevxfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/jffs2.conf
            regexp: "^(#)?install jffs2(\\s|$)"
            line: install jffs2 /bin/true
            create: yes

      - name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled | Disable jffs2"
        modprobe:
            name: jffs2
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/hfs.conf
            regexp: "^(#)?install hfs(\\s|$)"
            line: install hfs /bin/true
            create: yes

      - name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled | Disable hfs"
        modprobe:
            name: hfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_4
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.4
      - hfs

- name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/hfsplus.conf
            regexp: "^(#)?install hfsplus(\\s|$)"
            line: install hfsplus /bin/true
            create: yes

      - name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled | Disable hfsplus"
        modprobe:
            name: hfsplus
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_5
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus

- name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/squashfs.conf
            regexp: "^(#)?install squashfs(\\s|$)"
            line: install squashfs /bin/true
            create: yes

      - name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled | Disable squashfs"
        modprobe:
            name: squashfs
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_6
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled"
  block:
      - name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/udf.conf
            regexp: "^(#)?install udf(\\s|$)"
            line: install udf /bin/true
            create: yes

      - name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled | Disable udf"
        modprobe:
            name: udf
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_7
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.1.7
      - udf

- name: "NOTSCORED | 1.1.1.8 | PATCH | Ensure mounting of FAT filesystems is limited"
  block:
      - name: "NOTSCORED | 1.1.1.8 | PATCH | Ensure mounting of FAT filesystems is limited | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/vfat.conf
            regexp: "^(#)?install vfat(\\s|$)"
            line: install vfat /bin/true
            create: yes

      - name: "NOTSCORED | 1.1.1.8 | PATCH | Ensure mounting of FAT filesystems is limited | Disable FAT"
        modprobe:
            name: vfat
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_1_8
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - patch
      - rule_1.1.1.8
      - vfat

- name: "SCORED | 1.1.2 | PATCH | Ensure /tmp is configured"
  block:
      - name: "SCORED | 1.1.2 | PATCH | Ensure /tmp is configured | Configure fstab for /tmp"
        mount:
            path: /tmp
            src: /tmp
            state: mounted
            fstype: tmpfs
            opts: "{{ ubtu18cis_tmp_fstab_options }}"

      # Below is the systemd method but fstab is preferred
      # - name: "SCORED | 1.1.2 | PATCH | Ensure /tmp is configured | Configure the tmp mount"
      #   copy:
      #       src: etc/systemd/system/tmp.mount
      #       dest: /etc/systemd/system/tmp.mount
      #       owner: root
      #       group: root
      #       mode: 0644
      #   notify: systemd restart tmp.mount

      # - name: "SCORED | 1.1.2 | PATCH | Ensure /tmp is configured | Enforce systemd enabled service"
      #   systemd:
      #       name: tmp.mount
      #       daemon_reload: yes
      #       enabled: yes
      #       masked: no
      #       state: started
  when:
      - ubtu18cis_rule_1_1_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.2
      - tmp

- name: |
    "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition"
    "SCORED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition"
    "SCORED | 1.1.5 | PATCH | Ensure noexec option set on /tmp partition"
  mount:
      name: /tmp
      src: /tmp
      state: remounted
      fstype: tmpfs
      opts: "{{ ubtu18cis_tmp_fstab_options }}"
  when:
      - ubtu18cis_rule_1_1_3 or
        ubtu18cis_rule_1_1_4 or
        ubtu18cis_rule_1_1_5
      # - ubtu18cis_vartmp['enabled']
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5
      - tmp

# # -----------------------------
# # -----------------------------
# # Circle back on 1.1.6/1.1.7. This is how the RHEL CIS handles this task and I don't know what it's doing
# # -----------------------------
# # -----------------------------
- name: "SCORED | 1.1.6 | PATCH | Ensure separate partition exists for /var"
  shell: mount | grep "on /var "
  args:
      warn: false
  register: var_mounted
  changed_when: no
  failed_when: no
  when:
      - ubtu18cis_rule_1_1_6
  tags:
      - level2-server
      - level2-workstation
      - scored
      - patch
      - rule_1.1.6
      - var

- name: "SCORED | 1.1.7 | PATCH | Ensure separate partition exists for /var/tmp"
  shell: mount | grep "on /var/tmp "
  args:
      warn: false
  register: var_tmp_mounted
  changed_when: no
  failed_when: no
  when:
      - ubtu18cis_rule_1_1_7
  tags:
      - level2-server
      - level2-workstation
      - scored
      - patch
      - rule_1.1.7
      - var/tmp

- name: |
    "SCORED | 1.1.8 | PATCH | Ensure nodev option set on /var/tmp partition"
    "SCORED | 1.1.9 | PATCH | Ensure nosuid option set on /var/tmp partition"
    "SCORED | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
      name: /var/tmp
      src: "{{ ubtu18cis_vartmp['source'] }}"
      state: present
      fstype: "{{ ubtu18cis_vartmp['fstype'] }}"
      opts: "{{ ubtu18cis_vartmp['opts'] }}"
  
  when:
      - ubtu18cis_rule_1_1_8 or
        ubtu18cis_rule_1_1_9 or
        ubtu18cis_rule_1_1_10
      # - ubtu18cis_vartmp['enabled']
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.8
      - rule_1.1.9
      - rule_1.1.10
      - var/tmp

- name: "SCORED | 1.1.11 | PATCH | Ensure separate partition exists for /var/log"
  shell: mount | grep "on /var/log "
  register: var_log_mounted
  changed_when: no
  failed_when: no
  when:
      - ubtu18cis_rule_1_1_11
  tags:
      - level2-server
      - level2-workstation
      - scored
      - patch
      - rule_1.1.11
      - var/log

- name: "SCORED | 1.1.12 | PATCH | Ensure separate partition exists for /var/log/audit"
  shell: mount | grep "on /var/log/audit "
  register: var_log_audit_mounted
  changed_when: no
  failed_when: no
  when:
      - ubtu18cis_rule_1_1_12
  tags:
      - level2-server
      - level2-workstation
      - scored
      - patch
      - var/log/audit

- name: "SCORED | 1.1.13 | PATCH | Ensure separate partition exists for /home"
  shell: mount | grep "on /home"
  register: home_mounted
  changed_when: no
  failed_when: no
  when:
      - ubtu18cis_rule_1_1_13
  tags:
      - level2-server
      - level2-workstation
      - scored
      - patch
      - /home

- name: "SCORED | 1.1.14 | PATCH | Ensure nodev option set on /home partition"
  mount:
      name: "/home"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev"
  with_items: "{{ ansible_mounts }}"
  when:
      - ubtu18cis_rule_1_1_14
      - item.mount == "/home"
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.14
      - /home

- name: |
    "SCORED | 1.1.15 | PATCH | Ensure nodev option set on /dev/shm partition"
    "SCORED | 1.1.16 | PATCH | Ensure nosuid option set on /dev/shm partition"
    "SCORED | 1.1.17 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
      name: /dev/shm
      src: tmpfs
      state: mounted
      fstype: tmpfs
      opts: "defaults,nodev,nosuid,noexec"
  when:
      - ubtu18cis_rule_1_1_15 or
        ubtu18cis_rule_1_1_16 or
        ubtu18cis_rule_1_1_17
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.15
      - rule_1.1.16
      - rule_1.1.17
      - /dev/shm
- name: "NOTSCORED | 1.1.18 | AUDIT | Ensure nodev option set on removable media partitions"
  debug:
      msg: "Warning!!!! Not relevent control"
  when:
      - ubtu18cis_rule_1_1_18
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.1.18
      - removable_media

- name: "NOTSCORED | 1.1.19 | AUDIT | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "Warning!!!! Not relevent control"
  when:
      - ubtu18cis_rule_1_1_19
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.1.19
      - removable_media

- name: "NOTSCORED | 1.1.20 | AUDIT | Ensure noexec option set on removable media partitions"
  debug:
      msg: "Warning!!!! Not relevent control"
  when:
      - ubtu18cis_rule_1_1_20
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.1.20
      - removable_media

- name: "SCORED | 1.1.21 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null | xargs -I '{}' chmod a+t '{}'
  failed_when: ubtu18cis_1_1_21_status.rc>0
  register: ubtu18cis_1_1_21_status
  when:
      - ubtu18cis_rule_1_1_21
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.21
      - sticky_bit

- name: "SCORED | 1.1.22 | PATCH | Disable Automounting"
  service:
      name: autofs
      state: stopped
      enabled: no
  when:
      - ubtu18cis_rule_1_1_22
      - ubtu18cis_autofs_service_status.stdout == "loaded"
      - not ubtu18cis_allow_autofs
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.1.22
      - automounting

- name: "SCORED | 1.1.23 | PATCH | Disable USB Storage"
  block:
      - name: "SCORED | 1.1.23 | PATCH | Disable USB Storage | Set modprobe config"
        lineinfile:
            path: /etc/modprobe.d/usb_storage.conf
            regexp: '^install usb-storage'
            line: 'install usb-storage /bin/true'
            create: yes

      - name: "SCORED | 1.1.23 | PATCH | Disable USB Storage | Remove usb-storage module"
        modprobe:
            name: usb-storage
            state: absent
        when: ansible_connection != 'docker'
  when:
      - ubtu18cis_rule_1_1_23
  tags:
      - level1-server
      - level2-workstation
      - scored
      - patch
      - rule_1.1.23
      - usb_storage

# ---------------
# ---------------
# The section commented out is how RHEL7 CIS handles this task. I'm not sure how it works
# the registered varaible is not used anywehre in the role
# ---------------
# ---------------
- name: "NOTSCORED | 1.2.1 | AUDIT | Ensure package manager repositories are configured"
  block:
      - name: "NOTSCORED | 1.2.1 | AUDIT | Ensure package manager repositories are configured | Get repositories"
        command: apt-cache policy
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_2_1_apt_policy

      - name: "NOTSCORED | 1.2.1 | AUDIT | Ensure package manager repositories are configured | Message out repository configs"
        debug:
            msg:
                - "Alert!!!!Below are the apt package repositories"
                - "Please review to make sure they conform to your sites policies"
                - "{{ ubtu18cis_1_2_1_apt_policy.stdout_lines }}"
      
      # - name: "NOTSCORED | 1.2.1 | PATCH | Ensure package manager repositories are configured"
      #   apt:
      #       update_cache: yes
      #   register: apt_configured
  when:
      - ubtu18cis_rule_1_2_1
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.2.1
      - apt

# ---------------
# ---------------
# revisit. The RHEL7 CIS task for this does the command below
# gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-{{ ansible_distribution|lower }}-release
# with ubuntu the command fails due to the file not existing
# ---------------
# ---------------
- name: "NOTSCORED | 1.2.2 | AUDIT | Ensure GPG keys are configured"
  block:
      - name: "NOTSCORED | 1.2.2 | AUDIT | Ensure GPG keys are configured | Get apt gpg keys"
        command: apt-key list
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_2_2_apt_gpgkeys

      - name: "NOTSCORED | 1.2.2 | AUDIT | Ensure GPG keys are configured | Message out apt gpg keys"
        debug:
            msg:
                - "Alert!!!!Below are teh apt gpg kyes configured"
                - "Please review to make sure they are configured"
                - "in accordance with site policy"
                - "{{ ubtu18cis_1_2_2_apt_gpgkeys.stdout_lines }}"
  when:
      - ubtu18cis_rule_1_2_2
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - rule_1.2.2
      - gpg
      - keys

- name: "SCORED | 1.3.1 | PATCH | Ensure sudo is installed"
  apt:
      name: "{{ ubtu18cis_sudo_package }}"
      state: present
  when:
      - ubtu18cis_rule_1_3_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.3.1
      - sudo

- name: "SCORED | 1.3.2 | PATCH | Ensure sudo commands use pty"
  lineinfile:
      path: /etc/sudoers
      regexp: '^Defaults        use_'
      line: 'Defaults        use_pty'
      insertafter: '^Defaults'
  when:
      - ubtu18cis_rule_1_3_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.3.2
      - sudo

- name: "SCORED | 1.3.3 | PATCH | Ensure sudo log file exists"
  lineinfile:
      path: /etc/sudoers
      regexp: '^Defaults        logfile'
      line: 'Defaults        logfile="{{ ubtu18cis_sudo_logfile }}"'
      insertafter: '^Defaults'
  when:
      - ubtu18cis_rule_1_3_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.3.3
      - sudo

- name: "SCORED | 1.4.1 | PATCH | Ensure AIDE is installed"
  apt:
      name: ['aide', 'aide-common']
      state: present
  when:
      - ubtu18cis_rule_1_4_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.4.1
      - aide

- name: "SCORED | 1.4.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check
      cron_file: "{{ ubtu18cis_aide_cron['cron_file'] }}"
      user: "{{ ubtu18cis_aide_cron['cron_user'] }}"
      minute: "{{ ubtu18cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ ubtu18cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ ubtu18cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ ubtu18cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ ubtu18cis_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ ubtu18cis_aide_cron['aide_job'] }}"
  when:
      - ubtu18cis_rule_1_4_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.4.2
      - cron

- name: "SCORED | 1.5.1 | PATCH | Ensure permissions on bootloader config are configured"
  block:
      - name: "SCORED | 1.5.1 | AUDIT | Ensure permissions on bootloader config are configured | Check for Grub file"
        stat:
            path: /boot/grub/grub.cfg
        register: ubtu18cis_1_5_1_grub_cfg_status

      - name: "SCORED | 1.5.1 | PATCH | Ensure permissions on bootloader config are configured | Set permissions"
        file:
            path: /boot/grub/grub.cfg
            owner: root
            group: root
            mode: 0600
        when:
            - ubtu18cis_1_5_1_grub_cfg_status.stat.exists
  when:
      - ubtu18cis_rule_1_5_1
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.5.1
      - grub

# ---------------
# ---------------
# The RHEL7 based control for this does not use a valid module
# I need to research best way to set grub pw for Ubuntu using the 
# grub-mkpasswd-pbkdf2 command and passing the data at the same time. 
# ---------------
# ---------------
- name: "SCORED | 1.5.2 | PATCH | Ensure bootloader password is set"
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
      - ubtu18cis_rule_1_5_2
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.5.2
      - grub
      - notimplemented

- name: "SCORED | 1.5.3 | PATCH | Ensure authentication required for single user mode"
  user:
      name: root
      password: "{{ ubtu18cis_root_pw }}"
  when:
      - ubtu18cis_rule_1_5_3
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.5.3
      - passwd

- name: "SCORED | 1.5.4 | PATCH | Ensure interactive boot is not enabled"
  block:
      - name: "SCORED | 1.5.4 | PATCH | Ensure interactive boot is not enabled | Check for interactive login setting"
        shell: grep "^PROMPT_FOR_CONFIRM=" /etc/sysconfig/boot
        changed_when: false
        failed_when: false
        register: ubtu18cis_1_5_4_interactive_login_status

      - name: "SCORED | 1.5.4 | PATCH | Ensure interactive boot is not enabled | Set interactive login to no"
        lineinfile:
            path: /etc/sysconfig/boot
            regexp: '^PROMPT_FOR_CONFIRM'
            line: 'PROMPT_FOR_CONFIRM="no"'
        when: "'PROMPT_FOR_CONFIRM' in ubtu18cis_1_5_4_interactive_login_status.stdout"
  when:
      - ubtu18cis_rule_1_5_4
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - rule_1.5.4
      - interactive_boot
